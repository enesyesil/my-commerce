{"version":3,"file":"productController.js","sourceRoot":"","sources":["../../../src/controllers/productController.ts"],"names":[],"mappings":";;;;;;AAAA,0EAA4C;AAGrC,MAAM,cAAc,GAAG,KAAK,EAAE,CAAM,EAAE,GAAQ,EAAE,EAAE;IACvD,IAAI,CAAC;QACH,MAAM,QAAQ,GAAG,MAAM,sBAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACjD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjC,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,CAAC,CAAC;IAC7D,CAAC;AACH,CAAC,CAAC;AAPW,QAAA,cAAc,kBAOzB;AAEK,MAAM,UAAU,GAAG,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC3C,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IAGrD,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;QAC3C,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,yCAAyC,EAAE,CAAC,CAAC;IACtF,CAAC;IAGD,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;QAC5D,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,CAAC,CAAC;IACpE,CAAC;IACD,IAAI,CAAC,WAAW,IAAI,OAAO,WAAW,KAAK,QAAQ,IAAI,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;QACjF,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,8BAA8B,EAAE,CAAC,CAAC;IAC3E,CAAC;IACD,IAAI,CAAC,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC;QACtD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,wBAAwB,EAAE,CAAC,CAAC;IACrE,CAAC;IACD,IAAI,CAAC,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;QAC/D,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,wBAAwB,EAAE,CAAC,CAAC;IACrE,CAAC;IAGD,IAAI,CAAC;QACH,MAAM,OAAO,GAAG,MAAM,sBAAM,CAAC,OAAO,CAAC,MAAM,CAAC;YAC1C,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE;SAC1C,CAAC,CAAC;QACH,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;QAC9C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,CAAC,CAAC;IAC7D,CAAC;AACH,CAAC,CAAC;AAhCW,QAAA,UAAU,cAgCrB","sourcesContent":["import prisma from '../prisma/prismaClient';\n\n// Get All Products\nexport const getAllProducts = async (_: any, res: any) => {\n  try {\n    const products = await prisma.product.findMany();\n    res.status(200).json(products);\n  } catch (error) {\n    res.status(500).json({ message: 'Internal server error' });\n  }\n};\n\nexport const addProduct = async (req, res) => {\n  const { name, description, price, image } = req.body;\n\n  // Check if the user has the admin role\n  if (!req.user || req.user.role !== 'admin') {\n    return res.status(403).json({ message: 'You are not authorized to add products.' });\n  }\n\n  // Validation checks\n  if (!name || typeof name !== 'string' || name.trim() === '') {\n    return res.status(400).json({ message: 'Invalid product name.' });\n  }\n  if (!description || typeof description !== 'string' || description.trim() === '') {\n    return res.status(400).json({ message: 'Invalid product description.' });\n  }\n  if (!price || typeof price !== 'number' || price <= 0) {\n    return res.status(400).json({ message: 'Invalid product price.' });\n  }\n  if (!image || typeof image !== 'string' || image.trim() === '') {\n    return res.status(400).json({ message: 'Invalid product image.' });\n  }\n\n  // Proceed if validation and role checks pass\n  try {\n    const product = await prisma.product.create({\n      data: { name, description, price, image },\n    });\n    res.status(201).json(product);\n  } catch (error) {\n    console.error('Error adding product:', error);\n    res.status(500).json({ message: 'Internal server error' });\n  }\n};\n"]}